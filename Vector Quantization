{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Vector Quantization","provenance":[],"authorship_tag":"ABX9TyORy4CmeElsyDtTc56qpYHv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"id":"Bj8nMDBY-kJO","executionInfo":{"status":"ok","timestamp":1661755568203,"user_tz":-330,"elapsed":38685,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6206aa88-5e48-4019-db68-d30079219b28"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"code","source":["import librosa\n","from glob import glob\n","import numpy as np\n","from sklearn.cluster import KMeans\n","import math"],"metadata":{"id":"-YTeKJ8oD4-1","executionInfo":{"status":"ok","timestamp":1661755573190,"user_tz":-330,"elapsed":2413,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["base_path='/content/drive/MyDrive/Speaker Recognition Data/Guwahati dataset'\n","train_path= base_path + '/' + 'Train_Folder'\n","test_path=  base_path + '/' + 'Test_Folder'"],"metadata":{"id":"aUKXqfwOBIpa","executionInfo":{"status":"ok","timestamp":1661758440543,"user_tz":-330,"elapsed":581,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["code_book_sz=64"],"metadata":{"id":"LXgnK8AH_VOd","executionInfo":{"status":"ok","timestamp":1661755573192,"user_tz":-330,"elapsed":8,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["train_files_1 = glob(train_path+\"/*/*_AH01OENC.wav\")\n","train_files_2 = glob(train_path+\"/*/*_AH01MENC.wav\")\n","train_files = train_files_1 + train_files_2\n","train_files.sort()"],"metadata":{"id":"F1fmUHgNBw0_","executionInfo":{"status":"ok","timestamp":1661755583042,"user_tz":-330,"elapsed":9857,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["len(train_files)"],"metadata":{"id":"t6x4I_l-e6j8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661755586321,"user_tz":-330,"elapsed":551,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"9c435ec7-82fb-48d4-c757-9bc8c8b7d69c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["70"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["test_files_1 = glob(test_path+\"/*/*_AH01OENC_03*\")\n","test_files_2 = glob(test_path+\"/*/*_AH01MENC_03*\")\n","test_files_3 = glob(test_path+\"/*/*_AH01OENC_04*\")\n","test_files_4 = glob(test_path+\"/*/*_AH01MENC_04*\")\n","test_files = test_files_1 + test_files_2 + test_files_2 + test_files_4\n","test_files.sort()"],"metadata":{"id":"89Sq2G5oeqsA","executionInfo":{"status":"ok","timestamp":1661758446533,"user_tz":-330,"elapsed":639,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["len(test_files)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CM9VW16SfbHN","executionInfo":{"status":"ok","timestamp":1661758449018,"user_tz":-330,"elapsed":5,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"4f435b6b-9299-444e-88f7-5ab0eac72ba5"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["97"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["VQM =[]\n","for i in range(len(train_files)):\n"," audio_data, fs = librosa.load(train_files[i],sr=8000)\n","\n"," audio_data=audio_data-np.mean(audio_data)\n"," audio_data=audio_data/(1.01*(max(abs(audio_data))))\n","\n"," MFCC    = librosa.feature.mfcc(y=audio_data,sr=fs, n_mfcc=14, lifter=1,dct_type=3,hop_length=int(0.01*fs), win_length=int(0.02*fs),window='hann', n_mels=24)\n"," MFCC_d  = librosa.feature.delta(MFCC, order=1)\n"," MFCC_dd = librosa.feature.delta(MFCC, order=2)\n","\n"," MFCC=MFCC.T\n"," MFCC_d=MFCC_d.T\n"," MFCC_dd=MFCC_dd.T\n","\n"," MFCC=MFCC[:,1:14]\n"," MFCC_d=MFCC_d[:,1:14]\n"," MFCC_dd=MFCC_dd[:,1:14]\n","\n"," X = np.concatenate((MFCC, MFCC_d), axis=1)\n"," X = np.concatenate((X, MFCC_dd), axis=1)\n","\n"," vectors=KMeans(n_clusters=code_book_sz,random_state=42).fit(X)\n"," VQM.append(vectors)\n","\n"," print('Training for SPK ',i,' completed')"],"metadata":{"id":"LWC6fssnRdiF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661756119343,"user_tz":-330,"elapsed":517806,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"914457a0-cead-43b0-f7b3-36a333ea8f05"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Training for SPK  0  completed\n","Training for SPK  1  completed\n","Training for SPK  2  completed\n","Training for SPK  3  completed\n","Training for SPK  4  completed\n","Training for SPK  5  completed\n","Training for SPK  6  completed\n","Training for SPK  7  completed\n","Training for SPK  8  completed\n","Training for SPK  9  completed\n","Training for SPK  10  completed\n","Training for SPK  11  completed\n","Training for SPK  12  completed\n","Training for SPK  13  completed\n","Training for SPK  14  completed\n","Training for SPK  15  completed\n","Training for SPK  16  completed\n","Training for SPK  17  completed\n","Training for SPK  18  completed\n","Training for SPK  19  completed\n","Training for SPK  20  completed\n","Training for SPK  21  completed\n","Training for SPK  22  completed\n","Training for SPK  23  completed\n","Training for SPK  24  completed\n","Training for SPK  25  completed\n","Training for SPK  26  completed\n","Training for SPK  27  completed\n","Training for SPK  28  completed\n","Training for SPK  29  completed\n","Training for SPK  30  completed\n","Training for SPK  31  completed\n","Training for SPK  32  completed\n","Training for SPK  33  completed\n","Training for SPK  34  completed\n","Training for SPK  35  completed\n","Training for SPK  36  completed\n","Training for SPK  37  completed\n","Training for SPK  38  completed\n","Training for SPK  39  completed\n","Training for SPK  40  completed\n","Training for SPK  41  completed\n","Training for SPK  42  completed\n","Training for SPK  43  completed\n","Training for SPK  44  completed\n","Training for SPK  45  completed\n","Training for SPK  46  completed\n","Training for SPK  47  completed\n","Training for SPK  48  completed\n","Training for SPK  49  completed\n","Training for SPK  50  completed\n","Training for SPK  51  completed\n","Training for SPK  52  completed\n","Training for SPK  53  completed\n","Training for SPK  54  completed\n","Training for SPK  55  completed\n","Training for SPK  56  completed\n","Training for SPK  57  completed\n","Training for SPK  58  completed\n","Training for SPK  59  completed\n","Training for SPK  60  completed\n","Training for SPK  61  completed\n","Training for SPK  62  completed\n","Training for SPK  63  completed\n","Training for SPK  64  completed\n","Training for SPK  65  completed\n","Training for SPK  66  completed\n","Training for SPK  67  completed\n","Training for SPK  68  completed\n","Training for SPK  69  completed\n"]}]},{"cell_type":"code","source":["import pickle\n","for i in range(len(train_files)):\n"," print(i)\n"," pickle.dump(VQM[i], open(\"/content/drive/MyDrive/Speaker Recognition Data/VQ Models/VQ_\"+str(i)+'.pkl', \"wb\"))"],"metadata":{"id":"yqZqUhxuWwC4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Test"],"metadata":{"id":"u6Mj0ihcYy1Q"}},{"cell_type":"code","source":["def distance(Cen_vq,MFCC):\n","  filedist=[]\n","  for i in range(len(MFCC)):\n","    framedist=[]\n","    for j in range(len(Cen_vq)):\n","       framedist.append(math.sqrt(sum((MFCC[i,:]-Cen_vq[j,:])**2)))\n","    filedist.append(min(framedist))\n","  dist = np.mean(filedist)\n","  return dist"],"metadata":{"id":"bg9p01fLQMux","executionInfo":{"status":"ok","timestamp":1661756196092,"user_tz":-330,"elapsed":614,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["Score = []\n","for i in range(len(test_files)):\n"," audio_data, fs = librosa.load(test_files[i],sr=8000)\n","\n"," audio_data=audio_data-np.mean(audio_data)\n"," audio_data=audio_data/(1.01*(max(abs(audio_data))))\n","\n"," MFCC=librosa.feature.mfcc(y=audio_data,sr=fs, n_mfcc=14, lifter=1,dct_type=3,hop_length=int(0.01*fs), win_length=int(0.02*fs),window='hann', n_mels=24)\n"," MFCC_d  = librosa.feature.delta(MFCC, order=1)\n"," MFCC_dd = librosa.feature.delta(MFCC, order=2)\n","\n"," MFCC=MFCC.T\n"," MFCC_d=MFCC_d.T\n"," MFCC_dd=MFCC_dd.T\n","\n"," MFCC=MFCC[:,1:14]\n"," MFCC_d=MFCC_d[:,1:14]\n"," MFCC_dd=MFCC_dd[:,1:14]\n","\n"," X = np.concatenate((MFCC, MFCC_d), axis=1)\n"," X = np.concatenate((X, MFCC_dd), axis=1)\n","\n"," for j in range(len(VQM)):\n","  Cen_vq=pickle.load(open(\"/content/drive/MyDrive/Speaker Recognition Data/VQ Models/VQ_\"+str(j)+\".pkl\", \"rb\"))\n","  dist = distance(Cen_vq.cluster_centers_,X)\n","  Score.append(dist)\n","  print(len(Score))\n","Score = np.reshape(Score,(len(test_files),len(VQM)))  "],"metadata":{"id":"vZHXUyenH75b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(test_files)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NaFYhxhThRnK","executionInfo":{"status":"ok","timestamp":1661758420620,"user_tz":-330,"elapsed":5,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"84482cc6-6d97-4ea0-94f8-df93b9cda487"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["import librosa\n","from glob import glob\n","import numpy as np\n","import sklearn\n","from sklearn.mixture import GaussianMixture\n","from sklearn import mixture\n","from sklearn.metrics import accuracy_score\n","\n","#def compute_eer(label, pred, positive_label=1):\n","\n","#    fpr, tpr, threshold = sklearn.metrics.roc_curve(label, pred)\n","#    fnr = 1 - tpr\n","\n","#    eer_threshold = threshold[np.nanargmin(np.absolute((fnr - fpr)))]\n","\n","#    eer_1 = fpr[np.nanargmin(np.absolute((fnr - fpr)))]\n","#    eer_2 = fnr[np.nanargmin(np.absolute((fnr - fpr)))]\n","\n","#    eer = (eer_1 + eer_2) / 2\n","#    return eer\n","\n","#base_path='/home/pi/speaker_recognition/SR'\n","#test_path=  base_path + '/' + 'Test_Folder'\n","\n","cl_sz=64\n","\n","#test_files_1 = glob(test_path+\"/*/*_AH01OENC*\")\n","#test_files_2 = glob(test_path+\"/*/*_AH01MENC*\")\n","#test_files = test_files_1 + test_files_2\n","#test_files.sort()\n","\n","true = []\n","for i in range(len(test_files)):\n","  true.append(test_files[i].split('/')[7])\n","from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","true = le.fit_transform(true)\n","\n","Score = []\n","speaker=[]\n","pred = []\n","prob=[]\n","for i in range(len(test_files)):\n"," audio_data, fs = librosa.load(test_files[i],sr=8000)\n","\n"," audio_data=audio_data-np.mean(audio_data)\n"," audio_data=audio_data/(1.01*(max(abs(audio_data))))\n","\n"," MFCC=librosa.feature.mfcc(y=audio_data,sr=fs, n_mfcc=14, lifter=1,dct_type=3,hop_length=int(0.01*fs), win_length=int(0.02*fs),window='hann', n_mels=24)\n"," MFCC_d  = librosa.feature.delta(MFCC, order=1)\n"," MFCC_dd = librosa.feature.delta(MFCC, order=2)\n","\n"," MFCC=MFCC.T\n"," MFCC_d=MFCC_d.T\n"," MFCC_dd=MFCC_dd.T\n","\n"," MFCC=MFCC[:,1:14]\n"," MFCC_d=MFCC_d[:,1:14]\n"," MFCC_dd=MFCC_dd[:,1:14]\n","\n"," X = np.concatenate((MFCC, MFCC_d), axis=1)\n"," X = np.concatenate((X, MFCC_dd), axis=1)\n","\n"," for j in range(70):\n","  Cen_vq=pickle.load(open(\"/content/drive/MyDrive/Speaker Recognition Data/VQ Models/VQ_\"+str(j)+\".pkl\", \"rb\"))\n","  dist = distance(Cen_vq.cluster_centers_,X)\n","  Score.append(dist)\n"," pred_label = np.argmax(Score) \n"," if(pred_label == true[i]):\n","   pred.append(1)\n"," else:\n","   pred.append(0)  \n"," prob.append(abs(max(Score)))  \n"," speaker.append(pred_label)\n"," Score=[]\n"," print(\"Testing of Utterence \"+str(i)+\" completed\")\n","\n","#eer = compute_eer(pred, prob)\n","#print('The equal error rate is {:.3f}'.format(eer))\n","\n","print(\"The Accuracy is \", accuracy_score(true, speaker))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jRe9wR4MaVNU","executionInfo":{"status":"ok","timestamp":1661758405167,"user_tz":-330,"elapsed":730,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"d18c6d95-923c-4cb3-afd9-52d212db671a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["The Accuracy is  nan\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py:380: RuntimeWarning: Mean of empty slice.\n","  avg = a.mean(axis)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n"]}]},{"cell_type":"code","source":["speaker=[]\n","for i in range(len(Score)):\n","  speaker.append(np.argmin(Score[i]))"],"metadata":{"id":"IGPYbJYls9G0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["true = []\n","for i in range(len(test_files)):\n","  true.append(test_files[i].split('/')[7])\n","from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","true = le.fit_transform(true)"],"metadata":{"id":"glWsbRHis99n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["true"],"metadata":{"id":"WwiJEvHNOZ1-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["true = []\n","for i in range(len(test_files)):\n","  spk = test_files[i].split('/')[6]\n","  if spk == '1011':\n","    true.append(0)\n","  if spk == '1012':\n","    true.append(1)\n","  if spk == '1013':\n","    true.append(2)\n","  if spk == '1015':\n","    true.append(3)   \n","  if spk == '1016':\n","    true.append(4)     \n"," "],"metadata":{"id":"5AMlTAV0Y8rP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(true, speaker)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3rHFBaRMtEXR","executionInfo":{"status":"ok","timestamp":1658831669137,"user_tz":-330,"elapsed":490,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"e9d89d2a-6f5e-40a2-d934-7cf0b96eac35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","CM=confusion_matrix(true, speaker)"],"metadata":{"id":"0JwD2psGtEn0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import seaborn as sn\n","import matplotlib.pyplot as plt\n","sn.set(rc = {'figure.figsize':(15,15)})\n","hm = sn.heatmap(data =CM)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":870},"id":"1zQmB1H2tKYI","executionInfo":{"status":"ok","timestamp":1658831677426,"user_tz":-330,"elapsed":1769,"user":{"displayName":"Raghav Magazine","userId":"15283799250995730964"}},"outputId":"26027a28-2284-4e11-ce41-f3b7270ed102"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x1080 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}